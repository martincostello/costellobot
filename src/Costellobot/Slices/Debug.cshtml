@inherits RazorSliceHttpResult<GitHubOptions>
@implements IUsesLayout<_Layout, LayoutModel>

@using WebhookEventType = Octokit.Webhooks.WebhookEventType;

<div id="debug-content">
  <form action="#">
    <div class="mb-3">
      <label for="app-id" class="form-label">App</label>
      <select id="app-id" class="form-select text-webhook" aria-label="App" aria-describedby="webhook-app-help" disabled>
        @foreach ((var index, var app) in Model.Apps.Values.Index())
        {
            if (app.Name is { Length: > 0 } name)
            {
                <option value="@(app.AppId)" @(index is 0 ? "selected" : null)>@(name)</option>
            }
        }
      </select>
      <div id="webhook-app-help" class="form-text">
        The name of the GitHub app to deliver the payload to.
      </div>
    </div>
    <div class="mb-3">
      <label for="webhook-event" class="form-label">Event</label>
      <select id="webhook-event" class="form-select text-webhook" autofocus="autofocus" aria-label="Event" aria-describedby="webhook-event-help">
        @{
            var events = new (string Event, bool Selected)[]
            {
                (WebhookEventType.CheckSuite, false),
                (WebhookEventType.DeploymentProtectionRule, false),
                (WebhookEventType.DeploymentStatus, false),
                (WebhookEventType.Installation, false),
                (WebhookEventType.InstallationRepositories, false),
                (WebhookEventType.IssueComment, false),
                (WebhookEventType.Ping, false),
                (WebhookEventType.PullRequest, true),
                (WebhookEventType.PullRequestReview, false),
                (WebhookEventType.Push, false),
                (WebhookEventType.Status, false),
            };
        }
        @foreach (var item in events)
        {
            <option value="@(item.Event)" @(item.Selected ? "selected" : null)>@(item.Event)</option>
        }
      </select>
      <div id="webhook-event-help" class="form-text">
        The name of the
        <a href="https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads" target="_blank" rel="noopener">GitHub event</a>
        associated with the webhook payload.
      </div>
    </div>
    @if (!string.IsNullOrWhiteSpace(Model.WebhookSecret))
    {
      <div class="mb-3">
        <label for="webhook-signature">Signature</label>
        <input id="webhook-signature" class="form-control" placeholder="sha256=5a797ecce27d941c46c6ea5c39d5b17b31881eabccb6f83f0dc8a7cb2666d836" type="text" autocomplete="off" data-1p-ignore spellcheck="false">
        <div id="webhook-signature-help" class="form-text">
          The SHA-256 signature for the payload.
        </div>
      </div>
    }
    <div class="mb-3">
      <label for="webhook-payload" class="form-label">Payload</label>
      @{
        string example = @"{
  ""action"": ""opened"",
  ""number"": 1,
  ""pull_request"": {
    ""url"": ""https://api.github.com/repos/octocat/Hello-World/pulls/1"",
    ""id"": 1,
    ""node_id"": ""MDY6Q29tbWl0MTgwMzkzMzA1"",
    ""html_url"": """"
  }
}";
      }
      <textarea id="webhook-payload" class="form-control form-payload text-webhook" placeholder="@(example)" rows="20" spellcheck="false" aria-describedby="webhook-payload-help"></textarea>
      <div id="webhook-payload-help" class="form-text">
        The JSON payload of the GitHub event.
      </div>
    </div>
    <button id="post-webhook" type="submit" class="btn btn-primary" disabled>
      POST
      <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
    </button>
    <span class="badge webhook-status d-none"></span>
  </form>
</div>

@functions {
    public LayoutModel LayoutModel { get; } = new("Debug Webhook");
}
