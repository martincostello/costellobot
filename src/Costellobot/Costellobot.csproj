<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <ContainerFamily>noble-chiseled-extra</ContainerFamily>
    <EnableConfigurationBindingGenerator>true</EnableConfigurationBindingGenerator>
    <EnableRequestDelegateGenerator>true</EnableRequestDelegateGenerator>
    <InvariantGlobalization>false</InvariantGlobalization>
    <IsPackable>false</IsPackable>
    <PublishSelfContained>true</PublishSelfContained>
    <RootNamespace>MartinCostello.Costellobot</RootNamespace>
    <TargetFramework>net9.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>latest</TypeScriptToolsVersion>
    <UserSecretsId>Costellobot</UserSecretsId>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(GITHUB_ACTIONS)' != '' AND '$(SENTRY_AUTH_TOKEN)' != '' AND '$(ContainerRegistry)' != '' ">
    <SentryOrg>martin-costello</SentryOrg>
    <SentryProject>costellobot</SentryProject>
    <SentryCreateRelease>true</SentryCreateRelease>
    <SentrySetCommits>true</SentrySetCommits>
    <SentryUploadSymbols>true</SentryUploadSymbols>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Aspire.Azure.Messaging.ServiceBus" />
    <PackageReference Include="Aspire.Azure.Security.KeyVault" />
    <PackageReference Include="Aspire.Azure.Storage.Blobs" />
    <PackageReference Include="AspNet.Security.OAuth.GitHub" />
    <PackageReference Include="Azure.Extensions.AspNetCore.DataProtection.Blobs" />
    <PackageReference Include="Azure.Extensions.AspNetCore.DataProtection.Keys" />
    <PackageReference Include="Azure.Extensions.AspNetCore.Configuration.Secrets" />
    <PackageReference Include="Azure.Identity" />
    <PackageReference Include="Azure.Monitor.OpenTelemetry.Exporter" />
    <PackageReference Include="Azure.Messaging.ServiceBus" />
    <PackageReference Include="Azure.Storage.Blobs" />
    <PackageReference Include="Humanizer" />
    <PackageReference Include="Microsoft.AspNetCore.AzureAppServices.HostingStartup" />
    <PackageReference Include="Microsoft.Extensions.Http.Resilience" />
    <PackageReference Include="Microsoft.IdentityModel.JsonWebTokens" />
    <PackageReference Include="Microsoft.TypeScript.MSBuild" PrivateAssets="all" />
    <PackageReference Include="NuGet.Versioning" />
    <PackageReference Include="Octokit" />
    <PackageReference Include="Octokit.GraphQL" />
    <PackageReference Include="Octokit.Webhooks.AspNetCore" />
    <PackageReference Include="OpenTelemetry.Exporter.OpenTelemetryProtocol" />
    <PackageReference Include="OpenTelemetry.Extensions.Hosting" />
    <PackageReference Include="OpenTelemetry.Instrumentation.AspNetCore" />
    <PackageReference Include="OpenTelemetry.Instrumentation.Http" />
    <PackageReference Include="OpenTelemetry.Instrumentation.Runtime" />
    <PackageReference Include="OpenTelemetry.Resources.Azure" />
    <PackageReference Include="OpenTelemetry.Resources.Container" />
    <PackageReference Include="Polly.Extensions" />
    <PackageReference Include="Polly.RateLimiting" />
    <PackageReference Include="RazorSlices" />
    <PackageReference Include="Sentry.AspNetCore" />
    <PackageReference Include="System.Drawing.Common" />
  </ItemGroup>
  <ItemGroup>
    <ContainerPort Include="8080" Type="tcp" />
    <Content Update=".prettierignore;coverage\**;package.json;package-lock.json;tsconfig.json" CopyToPublishDirectory="Never" />
    <Content Remove="bank-holidays.json" />
    <EmbeddedResource Include="bank-holidays.json" />
    <None Remove="scripts\ts\**\*.ts" />
    <TypeScriptCompile Include="scripts\ts\**\*.ts" />
  </ItemGroup>
  <Target Name="BundleAssets" BeforeTargets="BeforeBuild">
    <Exec Command="npm ci" Condition=" !Exists('$(MSBuildThisFileDirectory)\node_modules') AND '$(GITHUB_ACTIONS)' != '' " />
    <Exec Command="npm install" Condition=" !Exists('$(MSBuildThisFileDirectory)\node_modules') AND '$(GITHUB_ACTIONS)' == '' " />
    <Exec Command="npm run build" Condition=" !Exists('$(MSBuildThisFileDirectory)\wwwroot\static\js\main.js') " />
  </Target>
  <Target Name="SetGitHubContainerOutputs" AfterTargets="PublishContainer" Condition=" '$(GITHUB_OUTPUT)' != '' AND '$(ContainerRegistry)' != '' ">
    <PropertyGroup>
      <_ContainerImage>$(ContainerRegistry)/$(ContainerRepository)</_ContainerImage>
      <_ContainerImage>$(_ContainerImage.ToLowerInvariant())</_ContainerImage>
      <_ContainerTag>$(_ContainerImage):github-$(GITHUB_RUN_NUMBER)</_ContainerTag>
    </PropertyGroup>
    <WriteLinesToFile File="$(GITHUB_OUTPUT)" Lines="container-digest=$(GeneratedContainerDigest)" />
    <WriteLinesToFile File="$(GITHUB_OUTPUT)" Lines="container-image=$(_ContainerImage)" />
    <WriteLinesToFile File="$(GITHUB_OUTPUT)" Lines="container-tag=$(_ContainerTag)" />
  </Target>
</Project>
