name: oats

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.gitattributes'
      - '**/*.gitignore'
      - '**/*.md'
  pull_request:
    branches:
      - main
      - dotnet-vnext
      - dotnet-nightly
  workflow_dispatch:

env:
  FORCE_COLOR: 3
  TERM: xterm

permissions: {}

jobs:
  oats:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:

      - name: Update agent configuration
        shell: pwsh
        run: |
          $nugetHome = "~/.nuget/packages"
          if (-Not (Test-Path $nugetHome)) {
            New-Item -Path $nugetHome -Type Directory -Force | Out-Null
          }
          $nugetHome = Resolve-Path $nugetHome
          "NUGET_PACKAGES=$nugetHome" >> ${env:GITHUB_ENV}

      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          filter: 'tree:0'
          persist-credentials: false
          show-progress: false

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          cache: false
          go-version: '1.24'

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1

      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '22'

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: pwsh
        run: |
          "dir=$(npm config get cache)" >> ${env:GITHUB_OUTPUT}

      - name: Setup npm cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Setup NuGet cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ${{ env.NUGET_PACKAGES }}
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.props') }}
          restore-keys: ${{ runner.os }}-nuget-

      - name: Build container
        id: build
        run: dotnet publish ./src/Costellobot --arch x64 --os linux -p:PublishProfile=DefaultContainer -p:SetGitHubContainerPublishingOutputs=true

      - name: Tag container
        env:
          CONTAINER_TAG: ${{ steps.build.outputs.container-tag }}
          OATS_TAG: costellobot:latest
        run: docker tag "${CONTAINER_TAG}" "${OATS_TAG}"

      - name: Install OATS
        env:
          # renovate: datasource=github-releases depName=oats packageName=grafana/oats
          OATS_VERSION: v0.4.0
        run: |
          go install "github.com/grafana/oats@${OATS_VERSION}"

      - name: Run OATS
        run: oats --timeout=5m ./tests/Costellobot.Oats
